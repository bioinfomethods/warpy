// Full path to the location of your warpy installation
BASE='/hpc/bpipeLibrary/shared/warpy-test'

REF_BASE='/hpc/genomeref/hg38/v0'
ARCHIE_HOME="/hpc/bpipeLibrary/shared/archie-test"
HPC_TMP='/ibm/hpcfs1/tmp'

executor="torque"
queue="batch"
mem_param="mem"
memory="8"
proc_mode=1

libs=[
    "classes",
    "$BASE/lib/groovy-ngs-utils.jar",
    "$ARCHIE_HOME/archie-common/build/libs/archie-common-all.jar"
]

//Assume Miniconda and Homebrew are installed under /opt
parameters {
    setProperty('BASE',BASE)
    setProperty('HPC_TMP',HPC_TMP)
    REF="$REF_BASE/Homo_sapiens_assembly38.fasta"
    REF_MMI="$BASE/data/hg38/ref.mmi"

    tools {
        // Full path to samtools
        SAMTOOLS="samtools"
        
        // Full path to dorado
        DORADO="dorado"
        
        // Full path to minimap2
        MINIMAP2="minimap2"

        // Full path to pod5 Python package
        POD5="pod5"

        // Full path to bamstats 
        BAMSTATS="bamstats"

        // Fill path to Clair3
        CLAIR3="/opt/bin"

        PYPY="pypy"

        PARALLEL="parallel"
        
        WHATSHAP="whatshap"
        
        LONGPHASE="longphase"
    }

    conda_envs {
        CLAIR3='clair3-arm64'
    }

    model {
        params {
            basecaller_basemod_threads = 0
            remora_cfg = null
            remora_model_path = null
            // drd_model = 'dna_r10.4.1_e8.2_400bps_sup@v4.0.0'
            // drd_model = 'dna_r10.4.1_e8.2_400bps_hac@v4.0.0'
            // drd_model = 'dna_r10.4.1_e8.2_400bps_hac@v4.1.0'
            drd_model = 'dna_r10.4.1_e8.2_400bps_hac@v4.2.0'
            // drd_model = 'dna_r10.4.1_e8.2_400bps_hac@v4.3.0'
        }
    }
    
    calling {
        snp_min_af = 0.08
        indel_min_af = 0.15
        qscore_filter = 10
        ref_pct_full = 0.1
        var_pct_full = 0.7
        phasing_pct = 0.7
        
        // Full alignment
        min_mq = 5
        min_cov = 2
        
        // SV calling
        tr_bed = "$BASE/data/human_GRCh38_no_alt_analysis_set.trf.bed"
        cluster_merge_pos = 150
        min_sv_length = 30
        max_sv_length = 100000
        min_read_support = "auto"
        min_read_support_limit = 2
        sv_types = "DEL,INS"

        // STR calling
        repeats_bed = "$BASE/data/wf_str_repeats.bed"
        variant_catalogue_hg38 = "$BASE/data/variant_catalog_hg38.json"
     }
}

environments {
    
    
    mac_dev {
        parameters {
            tools {
                // Full path to samtools
                SAMTOOLS='/opt/homebrew/bin/samtools'
                
                // Full path to dorado
                DORADO="$BASE/tools/dorado-0.5.0-osx-arm64/bin/dorado"
                
                // Full path to minimap2
                MINIMAP2='/opt/homebrew/bin/minimap2'
        
                // Full path to pod5 Python package (installed via pip)
                POD5='/opt/miniconda3/envs/ont_tools/bin/pod5'
        
                // Full path to bamstats (installed via Conda)
                //BAMSTATS='/opt/miniconda3/envs/ont_tools/bin/bamstats'
                BAMSTATS='bamstats'
        
                // Fill path to Clair3
                CLAIR3="$BASE/tools/Clair3"
        
                PYPY="$CLAIR3/pypy3.9-v7.3.8-osx64/bin/pypy"
        
                PARALLEL="/opt/homebrew/bin/parallel"
                
                WHATSHAP="$HOME/.local/bin/whatshap"
                
                LONGPHASE="$CLAIR3/longphase-1.5/longphase"
            }
        }
        
        stages {
            make_clair3_chunks { container=null; conda_env="clair3-arm64"  }
            pileup_variants { container=null; conda_env="clair3-arm64"  }
            aggregate_pileup_variants { container=null; conda_env="clair3-arm64" }
            select_het_snps  { container=null; conda_env="clair3-arm64" }
            phase_contig { container=null; conda_env="clair3-arm64" }
            get_qual_filter  { container=null; conda_env="clair3-arm64"  }
            create_candidates { container=null; conda_env="clair3-arm64" }
            evaluate_candidates  { container=null; conda_env="clair3-arm64"  }
            aggregate_full_align_variants { container=null; conda_env="clair3-arm64"  }
            merge_pileup_and_full_vars { container=null; conda_env="clair3-arm64"  }
            aggregate_all_variants  { container=null; conda_env="clair3-arm64"  }
        }
    }
}

filesystems {
    reference_data {
        type='bind'
        base="$REF_BASE" // Full path to the location your reference data is in (this is used to mount it into containers)
    }
    
    scripts_bin {
        type='bind'
        base="$BASE/scripts"
    }
    
    data {
        type='bind'
        base="$BASE/data"
    }

    designs {
        type='bind'
        base="$BASE/designs"
    }

    models {
        type='bind'
        base="$BASE/models"
    }

    tmp_root {
        type='bind'
        base="$HPC_TMP"
    }
    
    scratch_tmp {
        type='bind'
        base='/scratch/tmp'
    }
}

limits {
    // How many copies of dorado can run at once: set to the number of GPUs 
    // that are accessible to the pipeline / how many you would like to use in parallel
    dorados = 1
}

container_engine = "docker"

containers {
    
    if(container_engine == "singularity") {
    
        common_tools {
            type='singularity'
            image="$BASE/tools/ontresearch_dorado_4fdf39cb5afe.sif"
            storage=['reference_data', 'designs', 'models', 'data']
        }

            /*
            clair3 {
                type = 'docker'
                image = 'ontresearch/wf-human-variation-snp:sha800ab96e243576f7f5fb17a7c4ead9e538a48931'
                storage = 'reference_data'
            }
            */

        dorado_gpu {
            type='singularity'
            image="$BASE/tools/ontresearch_dorado_4fdf39cb5afe.sif"
            storage=['models', 'ont_samples']
            execOptions='--nv'
        }

        clair3 {
            type='singularity'
            image="$BASE/tools/clair3_v1.0.5.sif"
            storage=['reference_data', 'models']
        }

        mosdepth {
            type='singularity'
            image="$BASE/tools/ontresearch_wf-human-variation_558fdf2855c5.sif"
            storage=['reference_data', 'designs']
        }

        sniffles {
            type='singularity'
            image="$BASE/tools/ontresearch_wf-human-variation-sv_7104a232cd4b.sif"
            storage=['reference_data', 'data']
        }

        sniffles_filter {
            type='singularity'
            image="$BASE/tools/ontresearch_wf-human-variation-sv_7104a232cd4b.sif"
            storage=['scripts_bin', 'designs', 'tmp_root']
        }

        modkit {
            type='singularity'
            image="$BASE/tools/ontresearch_modkit_79dd46d51ab7.sif"
            storage=['reference_data', 'designs']
        }
        
        gatk {
            type='singularity'
            image="$BASE/tools/gatk-4.5.0.0.sif"
            storage=['reference_data', 'designs']
        }
        
        strvctvre {
            type = 'singularity'
            image = 'strvctvre_v1.10.sif'
            storage = ['reference_data','data','ximmer']
        }
        
    }
    else
    if(container_engine == "docker") {
        common_tools {
            type = 'docker'
            image = "ontresearch/wf-human-variation:shae4e5f94d1cd0ea009df54797bbe6ee09a53e911e"
            storage = ['reference_data', 'designs']
        }

        sniffles_filter {
            type='singularity'
            image="$BASE/tools/ontresearch_wf-human-variation-sv_7104a232cd4b.sif"
            storage=['scripts_bin', 'designs', 'tmp_root']
        }

        sniffles {
            type = 'docker'
            image = "ontresearch/wf-human-variation-sv:shabc3ac908a14705f248cdf49f218956ec33e93ef9"
            storage = ['reference_data', 'data']
        }

        modkit {
            type='singularity'
            image="$BASE/tools/ontresearch_modkit_79dd46d51ab7.sif"
            storage=['reference_data', 'designs']
        }

        sniffles_filter {
            type = 'docker'
            image = "ontresearch/wf-human-variation-sv:shabc3ac908a14705f248cdf49f218956ec33e93ef9"
            storage = ['scripts_bin', 'designs']
        }

        str_container {
            type = 'docker'
            image = 'ontresearch/wf-human-variation-str:sha8a8df7d40e0c9125ed43b347811afd14a077f94e'
            storage = ['reference_data','data','scripts_bin']
        }

        modkit {
            type = 'docker'
            image = 'ontresearch/modkit:mr442_sha410f0f8611f29685a4005e76eb4d5dfc954a739a'
            storage = ['reference_data','data']
        }

        gatk {
            type = 'docker'
            image = 'broadinstitute/gatk:4.5.0.0'
            storage = ['reference_data','data']
        }
        
        strvctvre {
            type = 'docker'
            image = 'strvctvre:latest'
            storage = ['reference_data','data','ximmer']
        }
    }
}

stages {
    convert_fast5_to_pod5 {
        modules="singularity/3.8.4"
        walltime="1:00:00"
        procs=4
        memory="16g"
        container='common_tools'
    }

    dorado {
        modules="singularity/3.8.4"
        walltime="12:00:00"
        procs=4
        memory="256g"
        gpus=4
        queue='gpu'
        container='dorado_gpu'
    }

    make_mmi {
        modules="singularity/3.8.4"
        walltime="1:00:00"
        procs=4
        memory="16g"
        container='common_tools'
    }

    minimap2_align { 
        modules="singularity/3.8.4"
        walltime="8:00:00"
        procs=8
        memory="64g"
        container='common_tools' }

    merge_pass_calls {
        modules="singularity/3.8.4"
        walltime="2:00:00"
        procs=4
        memory="16g"
        container='common_tools'
    }

    mosdepth {
        modules="singularity/3.8.4"
        walltime="2:00:00"
        procs=4
        memory="16g"
        container='mosdepth'
    }

    read_stats {
        modules="singularity/3.8.4"
        walltime="2:00:00"
        procs=4
        memory="8g"
        container='sniffles'
    }

    make_clair3_chunks {
        modules="singularity/3.8.4"
        walltime="2:00:00"
        procs=4
        memory="8g"
        container='clair3'
    }

    pileup_variants {
        modules="singularity/3.8.4"
        walltime="4:00:00"
        procs=1
        memory="8g"
        container='clair3'
    }

    aggregate_pileup_variants {
        modules="singularity/3.8.4"
        walltime="2:00:00"
        procs=1
        memory="8g"
        container='clair3'
    }

    select_het_snps {
        modules="singularity/3.8.4"
        walltime="2:00:00"
        procs=1
        memory="16g"
        container='clair3'
    }

    phase_contig {
        modules="singularity/3.8.4"
        walltime="4:00:00"
        procs=4
        memory="16g"
        container='clair3'
    }

    get_qual_filter {
        modules="singularity/3.8.4"
        walltime="2:00:00"
        procs=1
        memory="8g"
        container='clair3'
    }

    create_candidates {
        modules="singularity/3.8.4"
        walltime="2:00:00"
        procs=1
        memory="8g"
        container='clair3'
    }

    evaluate_candidates {
        modules="singularity/3.8.4"
        walltime="2:00:00"
        procs=1
        memory="8g"
        container='clair3'
    }

    aggregate_full_align_variants {
        modules="singularity/3.8.4"
        walltime="4:00:00"
        procs=1
        memory="8g"
        container='clair3'
    }

    merge_pileup_and_full_vars {
        modules="singularity/3.8.4"
        walltime="4:00:00"
        procs=1
        memory="8g"
        container='clair3'
    }

    aggregate_all_variants {
        modules="singularity/3.8.4"
        walltime="4:00:00"
        procs=1
        memory="8g"
        container='clair3'
    }

    filterBam {
        modules="singularity/3.8.4"
        queue='batch'
        walltime="1:00:00"
        procs=4
        memory="16g"
        container='common_tools'
    }

    /*
    make_clair3_chunks { container='clair3' }
    pileup_variants { container='clair3' }
    aggregate_pileup_variants { container='clair3' }
    select_het_snps  { container='clair3' }
    phase_contig { container='clair3' }
    get_qual_filter  { container='clair3' }
    create_candidates { container='clair3' }
    evaluate_candidates  { container='clair3' }
    aggregate_full_align_variants { container='clair3' }
    merge_pileup_and_full_vars { container='clair3' }
    aggregate_all_variants  { container='clair3' }
    */
    mosdepth  { container='common_tools' }
    
    sniffles2 {
        modules="singularity/3.8.4"
        queue='batch'
        walltime="4:00:00"
        procs=8
        memory="64g"
        container='sniffles'
    }

    sort_sv_vcf {
        modules="singularity/3.8.4"
        queue='batch'
        walltime="4:00:00"
        procs=1
        memory="8g"
        container='sniffles'
    }

    filter_sv_calls {
        modules="singularity/3.8.4"
        queue='batch'
        walltime="4:00:00"
        procs=1
        memory="4g"
        container='sniffles_filter'
    }

    bam2bedmethyl {
        modules="singularity/3.8.4"
        queue='batch'
        walltime="4:00:00"
        procs=1
        memory="8g"
        container='modkit'
    }

    /*
    call_str { container = "str_container" }
    annotate_repeat_expansions  { container = "str_container" }
    merge_str_tsv  { container = "clair3" }
    merge_str_vcf  { container = "clair3" }
    */
    //read_stats { container = "clair3" }
    //make_str_report  { container = "str_container" }
    //read_stats { container = "clair3" }
    make_str_report  { container = "str_container" }
    
    sv_annotate { container='gatk' }
}
